buildscript {
	repositories {
		mavenCentral()
		//Needed only for SNAPSHOT versions
		//maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}
	dependencies {
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.9.0'
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
	// Test coverage
	id 'jacoco'

	// Code style
	id 'checkstyle'

	// PMD
	id 'pmd'

	// PITest
	id 'info.solidsoft.pitest' version '1.9.0'
}

group = 'nl.tudelft.cse.sem.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
	mavenCentral()
}

dependencies {

	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation project(path: ':user:client')
	implementation project(path: ':user:commons')
	// https://github.com/jwtk/jjwt#dependencies
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'org.bouncycastle:bcprov-jdk15on:1.70'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// OpenAPI documentation
	// XXX: if it starts breaking, remove. For convenience only (for now).
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.13'

	// Local test database (in-memory)
	implementation 'com.h2database:h2'
	developmentOnly 'org.hibernate:hibernate-entitymanager'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.junit.jupiter:junit-jupiter:5.9.1')
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.9.0'
	testImplementation('org.assertj:assertj-core:3.23.1')
}

configurations {
	testImplementation.extendsFrom compileOnly
}

test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['nl.tudelft.sem.template.*']
		excludes = []
	}
}

repositories {
	mavenCentral()
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['nl.tudelft.sem.template.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}
	}
}

checkstyle {
	toolVersion "10.4"
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	ignoreFailures = false
	maxErrors = 0
	maxWarnings = 0
}

pmd {
	incrementalAnalysis = true
	sourceSets = [sourceSets.main]
}

apply plugin: 'info.solidsoft.pitest'
pitest {
	//adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
	junit5PluginVersion = '1.1'

	targetClasses = ['nl.tudelft.sem.template.*']  //by default "${project.group}.*"
	pitestVersion = '1.9.0' //not needed when a default PIT version should be used
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
}
